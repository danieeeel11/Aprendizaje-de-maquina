{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNCbsf7ZPUkKEuX1AVllMej"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":23,"metadata":{"id":"G2XMLtp3Czod","executionInfo":{"status":"ok","timestamp":1678933502687,"user_tz":300,"elapsed":220,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from numpy import inf\n","import math"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"OyMGY-uOCzoj","executionInfo":{"status":"ok","timestamp":1678933451174,"user_tz":300,"elapsed":51,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"outputs":[],"source":["muestras= np.array(\n","    [[6.2206, 3.5095],\n","    [5.1325, 4.0181],\n","    [0.7597, 2.3992],\n","    [1.2332, 6.8391],\n","    [2.3995, 4.1727],\n","    [0.4965, 9.0272],\n","    [9.4479, 4.9086],\n","    [4.8925, 3.3772],\n","    [9.0005, 3.6925],\n","    [1.1120, 7.8025]\n","    ])\n","\n","clases=np.array([1, 1, 0, 0, 0, 0, 1, 1, 1, 0]);\n"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"yz21OTA4Czoo","executionInfo":{"status":"ok","timestamp":1678933451177,"user_tz":300,"elapsed":52,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"outputs":[],"source":["def recta(x):\n","    return 0 "]},{"cell_type":"code","execution_count":5,"metadata":{"id":"Wf1OWWCtCzox","executionInfo":{"status":"ok","timestamp":1678933451179,"user_tz":300,"elapsed":52,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"outputs":[],"source":["def sigmoid(z):\n","  return 0"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"MMbPogAYH469","executionInfo":{"status":"ok","timestamp":1678933451182,"user_tz":300,"elapsed":53,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"outputs":[],"source":["def f(x1, x2):\n","  return 0"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":55,"status":"ok","timestamp":1678933451186,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"},"user_tz":300},"id":"hczDwiX0Czos","outputId":"2a5d36b5-1ec7-47fc-ef41-39257a084ab9"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["fig = plt.figure()\n","x = np.arange(-2, 12, 0.1)\n","yscale = np.arange(-2, 12, 1)\n","xscale = np.arange(-2, 12, 1)\n","clase1 = muestras[np.where(clases==0), :][0]\n","clase2 = muestras[np.where(clases==1), :][0]\n","\n","plt.scatter(clase1[:,0], clase1[:,1], c=['red'])\n","plt.scatter(clase2[:,0], clase2[:,1], c=['blue'])\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"lIpkDMo7ChFn"},"source":["1- Encontrar una función(cualquiera) de una recta que divida el conjunto de datos:\n","\n","$x_2 = \\theta_1 x_1 + \\theta_0$\n","\n","2- crear la función:\n","\n","$f(x_1, x_2) = \\theta_1 x_1 + \\theta_0 - x_2$\n","\n","3- Ubicar tres puntos en la gráfica:\n","a) uno por encima de la línea\n","b) uno sobre la línea\n","c) Uno por debajo de la línea\n","\n","4 - ¿Cuánto da la función $f(x_1, x_2)$  en cada uno de estos puntos?\n","\n","4b- En general, ¿cuańto da un punto que está por encima de la línea, uno que está sobre la línea y otro que está debajo?\n","\n","5 - ¿A cuánto tiende un punto que está lejos de la línea por debajo? ¿A cuanto tiende un punto que está lejos de la línea por encima?\n","\n","6 - Dibujar la gráfica z vs sigmoid(z). A cuánto tiende sigmoid cuando:\n","\n","\n","sigmoid(z) = $\\frac{1}{1+e^{-z}}$\n","\n","\n","a) z tiende a infinito\n","b) z es cero\n","c) z tiene a -infinito\n","\n","7 - cree una función:\n","\n"," $g(x_1, x_2) = sigmoid(f(x_1, x_2))$\n"," \n"," donde $f(x_1, x_2)$ es la función creada anteriormente.\n","\n"," 8 - responda los puntos 4 y 5  pero en lugar de utilizar la función $f(x_1, x_2)$, utilice $g(x_1, x_2)$\n","\n"," 9 - entrenar un modelo utilizando sklearn Logistic Regression. Dibujar la línea encontrada por el algoritmo. \n","\n"]},{"cell_type":"markdown","source":["#1. Encontrar una función(cualquiera) de una recta que divida el conjunto de datos:\n","\n","$x_2 = \\theta_1 x_1 + \\theta_0$"],"metadata":{"id":"dtsqk00SUI70"}},{"cell_type":"code","source":["x1 = []\n","x2 = []\n","for i in muestras:\n","  x1.append(float(i[0]))\n","  x2.append(float(i[1]))"],"metadata":{"id":"GZHVDfwvW_xu","executionInfo":{"status":"ok","timestamp":1678933451189,"user_tz":300,"elapsed":51,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","\n","lr = LogisticRegression()\n","lr.fit(muestras, clases)\n","\n","theta1 = lr.coef_[0][0]\n","#theta0 = lr.intercept_[0]\n","theta0 = lr.coef_[0][1]\n","print(\"Theta1:\", theta1)\n","print(\"Theta0:\", theta0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jaSV4poVYvc7","executionInfo":{"status":"ok","timestamp":1678933453072,"user_tz":300,"elapsed":1933,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"65094a54-6c3f-4bd4-9705-7b95ba07dc90"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Theta1: 1.130882456525329\n","Theta0: -0.2700994795131467\n"]}]},{"cell_type":"code","source":["def recta(x1,theta0,theta1):\n","  aux = []\n","  for i in x1:\n","    aux.append(theta1*i + theta0)\n","  return aux"],"metadata":{"id":"Css9F2u2ZwdU","executionInfo":{"status":"ok","timestamp":1678933453074,"user_tz":300,"elapsed":24,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["x2_plot = recta(x1,theta0,theta1)\n","\n","plt.scatter(clase1[:,0], clase1[:,1], c=['red'])\n","plt.scatter(clase2[:,0], clase2[:,1], c=['blue'])\n","plt.plot(x1, x2_plot, color='red')\n","\n","plt.xlabel('x1')\n","plt.ylabel('x2')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"ahWQ7V3rXbRd","executionInfo":{"status":"ok","timestamp":1678933453075,"user_tz":300,"elapsed":22,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"7b58a5a9-9254-425c-b791-ad3bcaf8e2f5"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["#2. Crear la función:\n","\n","$f(x_1, x_2) = \\theta_1 x_1 + \\theta_0 - x_2$"],"metadata":{"id":"n2c5ULkiX52E"}},{"cell_type":"code","source":["def f(x1,x2):\n","  aux = []\n","  if type(x1) == list:\n","    for i in range(len(x1)):\n","      aux.append(theta1*x1[i] + theta0 - x2[i])\n","  else:\n","    aux.append(theta1*x1 + theta0 - x2)\n","  return aux"],"metadata":{"id":"bgdV_KwTX5qA","executionInfo":{"status":"ok","timestamp":1678933453740,"user_tz":300,"elapsed":83,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["#3. Ubicar tres puntos en la gráfica:\n","a) uno por encima de la línea\n","\n","b) uno sobre la línea\n","\n","c) Uno por debajo de la línea\n"],"metadata":{"id":"muOSttQEdF1P"}},{"cell_type":"code","source":["import random"],"metadata":{"id":"buyRNBglgN9y","executionInfo":{"status":"ok","timestamp":1678933453741,"user_tz":300,"elapsed":81,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["dotA = random.choice(x1)\n","ind = x1.index(dotA)\n","#dotA = dotA + random.randint(1, 3)\n","y_dotA = x2_plot[ind] + random.randint(1, 3)\n","a = [dotA,y_dotA]\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eE_B2BZigmz9","executionInfo":{"status":"ok","timestamp":1678933453742,"user_tz":300,"elapsed":80,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"a41982a8-06b2-464d-f26d-5aef624421c9"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[4.8925, 6.262742939037026]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["dotB = random.choice(x1)\n","ind = x1.index(dotB)\n","y_dotB = x2_plot[ind]\n","b = [dotB,y_dotB]\n","b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nnkvUy0kI_ed","executionInfo":{"status":"ok","timestamp":1678933453743,"user_tz":300,"elapsed":76,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"aba59afb-f0c3-46cc-ce93-b37ffd0b8459"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[9.4479, 10.41436488149251]"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["dotC = random.choice(x1)\n","ind = x1.index(dotC)\n","#dotC = dotC + random.randint(1, 3)\n","y_dotC = x2_plot[ind] - random.randint(1, 3)\n","c = [dotC,y_dotC]\n","c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g40IwVIedLBw","executionInfo":{"status":"ok","timestamp":1678933453745,"user_tz":300,"elapsed":72,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"0b32d7f0-eca8-4ca4-cdd3-1a933fc0ad72"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[6.2206, 5.764667929548315]"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["plt.scatter(clase1[:,0], clase1[:,1], c=['red'])\n","plt.scatter(clase2[:,0], clase2[:,1], c=['blue'])\n","plt.plot(x1, x2_plot, color='red')\n","plt.plot(a[0],a[1],marker =\"o\", markersize=10, color=\"black\", label='a')\n","plt.plot(b[0],b[1],marker =\"o\", markersize=10, color=\"grey\", label='b')\n","plt.plot(c[0],c[1],marker =\"o\", markersize=10, color=\"orange\", label='c')\n","\n","plt.xlabel('x1')\n","plt.ylabel('x2')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"-2OwgEyDfHNb","executionInfo":{"status":"ok","timestamp":1678933453746,"user_tz":300,"elapsed":67,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"ed1d7b15-d375-4278-af1f-cafdcc64e8d7"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["#4. ¿Cuánto da la función $f(x_1, x_2)$  en cada uno de estos puntos?\n","\n","En general, ¿cuańto da un punto que está por encima de la línea, uno que está sobre la línea y otro que está debajo?"],"metadata":{"id":"0BzkVoqEJj4r"}},{"cell_type":"code","source":["f(a[0],a[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"69p2KZhiJrcT","executionInfo":{"status":"ok","timestamp":1678933453747,"user_tz":300,"elapsed":64,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"1cd7da10-e2b9-4a04-86c8-002d7845b8f8"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[-1.0]"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["f(b[0],b[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PRjSDQW5RX92","executionInfo":{"status":"ok","timestamp":1678933453748,"user_tz":300,"elapsed":58,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"482bec46-3092-4b21-cbdc-7dabf437aee8"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.0]"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["f(c[0],c[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lfpr3rzIRdc6","executionInfo":{"status":"ok","timestamp":1678933453750,"user_tz":300,"elapsed":51,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"5e9acdc8-e0e1-465d-c342-a098db237c03"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1.0]"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["R// En general, un punto por encima de la línea con la función f(x1,x2) da -2. Un punto en la línea con la función da 0. Un punto debajo de la línea con la función da 2."],"metadata":{"id":"xgFd8eZQSAWg"}},{"cell_type":"markdown","source":["#5. ¿A cuánto tiende un punto que está lejos de la línea por debajo? ¿A cuanto tiende un punto que está lejos de la línea por encima?"],"metadata":{"id":"sqqmCFPWS2wR"}},{"cell_type":"code","source":["dots = []\n","for i in range(10):\n","  dotA = random.choice(x1)\n","  ind = x1.index(dotA)\n","  #dotA = dotA + random.randint(1, 3)\n","  y_dotA = x2_plot[ind] + random.randint(1, 3)\n","  a = [dotA,y_dotA]\n","  dots.append(a)\n","dots_x = []\n","dots_y = []\n","for i in dots:\n","  dots_x.append(i[0])\n","  dots_y.append(i[1])"],"metadata":{"id":"bJSFGrtqGiOd","executionInfo":{"status":"ok","timestamp":1678933453751,"user_tz":300,"elapsed":44,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["f(dots_x,dots_y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SOcOGqStG7cv","executionInfo":{"status":"ok","timestamp":1678933453752,"user_tz":300,"elapsed":43,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"99fabd97-c818-4f38-ca70-e81c6cbfbb0a"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[-2.0, -2.0, -2.0, -3.0, -1.0, -3.0, -1.0, -2.0, -3.0, -3.0]"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["R// Por lo general, un "],"metadata":{"id":"B3qcMdIY_BPF"}},{"cell_type":"markdown","source":["#6. Dibujar la gráfica z vs sigmoid(z). A cuánto tiende sigmoid cuando:\n","\n","\n","sigmoid(z) = $\\frac{1}{1+e^{-z}}$\n","\n","\n","a) z tiende a infinito\n","\n","b) z es cero\n","\n","c) z tiene a -infinito"],"metadata":{"id":"5g_PVJCuTAfO"}},{"cell_type":"code","source":["def sigmoid(z):\n","  sigmoid = 1 / (1 + math.exp(-z))\n","  return sigmoid"],"metadata":{"id":"c5_A-6mQTAAd","executionInfo":{"status":"ok","timestamp":1678934857301,"user_tz":300,"elapsed":328,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["list_x = list(np.arange(-10,10,0.1))\n","list_y = []\n","for i in list_x:\n","  list_y.append(sigmoid(i))"],"metadata":{"id":"vtxGKduKSAC-","executionInfo":{"status":"ok","timestamp":1678934703276,"user_tz":300,"elapsed":16,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["plt.title('Sigmoid')\n","plt.scatter(list_x, list_y, c=['brown'])\n","\n","plt.xlabel('x')\n","plt.ylabel('y')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"kugiEuiuSsk8","executionInfo":{"status":"ok","timestamp":1678934836101,"user_tz":300,"elapsed":318,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"173a4bda-aca1-449c-e292-06ac3499f954"},"execution_count":85,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["print(\"Cuando z es cero:\",sigmoid(0))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qTwVdHJ-O6MO","executionInfo":{"status":"ok","timestamp":1678935018198,"user_tz":300,"elapsed":905,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}},"outputId":"314c31e1-1c7b-4bff-d8b6-aa54094df393"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stdout","text":["Cuando z es cero: 0.5\n"]}]},{"cell_type":"markdown","source":["R// Dada la gráfica se puede decir que:\n","\n","a) Cuando z tiende a infinito sigmoid tiende a 1.\n","\n","b) Cuando z es cero tiende sigmoid a 0.5.\n","\n","c) Cuando z tiende a -infinito sigmoid tiende a 0."],"metadata":{"id":"bjjLa8OwUZHH"}},{"cell_type":"markdown","source":["#7. Cree una función:\n","\n"," $g(x_1, x_2) = sigmoid(f(x_1, x_2))$\n"," \n"," donde $f(x_1, x_2)$ es la función creada anteriormente."],"metadata":{"id":"8eGpgX_ITItj"}},{"cell_type":"code","source":[],"metadata":{"id":"JBPpe6kGTMOX","executionInfo":{"status":"ok","timestamp":1678933453753,"user_tz":300,"elapsed":37,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["# 8. Responda los puntos 4 y 5  pero en lugar de utilizar la función $f(x_1, x_2)$, utilice $g(x_1, x_2)$"],"metadata":{"id":"QOixdb1FTMp2"}},{"cell_type":"code","source":[],"metadata":{"id":"_vYKWCsVTQHs","executionInfo":{"status":"ok","timestamp":1678933453756,"user_tz":300,"elapsed":39,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["#9. Entrenar un modelo utilizando sklearn Logistic Regression. Dibujar la línea encontrada por el algoritmo. "],"metadata":{"id":"ei05KEcVTQZj"}},{"cell_type":"code","source":[],"metadata":{"id":"hUtoHE8STUsz","executionInfo":{"status":"ok","timestamp":1678933453759,"user_tz":300,"elapsed":40,"user":{"displayName":"Daniel Velásquez","userId":"02609565137342835916"}}},"execution_count":22,"outputs":[]}]}